---
- name: Check if Cert-Manager namespace exists
  command: kubectl get namespace cert-manager
  register: cert_manager_ns_check
  ignore_errors: yes
  changed_when: false

- name: Ensure Cert-Manager Namespace Exists
  shell: kubectl create namespace cert-manager --dry-run=client -o yaml | kubectl apply -f -
  when: cert_manager_ns_check.rc != 0

- name: Check if Cert-Manager CRDs Are Installed
  command: kubectl get crds
  register: cert_manager_crds
  changed_when: false
  ignore_errors: yes

- name: Install Cert-Manager CRDs (if missing)
  command: kubectl apply -f https://github.com/cert-manager/cert-manager/releases/latest/download/cert-manager.crds.yaml
  when: "'clusterissuers.cert-manager.io' not in cert_manager_crds.stdout"

- name: Check if Cert-Manager is Installed
  command: kubectl get deployments -n cert-manager
  register: cert_manager_check
  changed_when: false
  ignore_errors: yes

- name: Install Cert-Manager (if not installed)
  command: kubectl apply -f https://github.com/cert-manager/cert-manager/releases/latest/download/cert-manager.yaml
  when: "'cert-manager' not in cert_manager_check.stdout"

- name: Check if Cert-Manager Deployment is Ready
  command: kubectl get deployment cert-manager -n cert-manager -o jsonpath='{.status.conditions[?(@.type=="Available")].status}'
  register: cert_manager_ready_check
  ignore_errors: yes
  changed_when: false

- name: Wait for Cert-Manager to be Ready
  command: kubectl wait --for=condition=available --timeout=300s -n cert-manager deployment/cert-manager
  when: cert_manager_ready_check.stdout != "True"

- name: Check if Let's Encrypt ClusterIssuer already exists
  command: kubectl get clusterissuer letsencrypt-prod
  register: letsencrypt_check
  changed_when: false
  ignore_errors: yes

- name: Apply Let's Encrypt Production ClusterIssuer (if missing)
  template:
    src: letsencrypt-prod.yml.j2
    dest: /tmp/letsencrypt-prod.yml
  when: letsencrypt_check.rc != 0

- name: Deploy Let's Encrypt Production ClusterIssuer
  command: kubectl apply -f /tmp/letsencrypt-prod.yml
  when: letsencrypt_check.rc != 0
...